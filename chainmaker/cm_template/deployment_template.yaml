apiVersion: apps/v1
kind: Deployment
metadata:
  name: chainmaker-node{i}-depolyment
spec:
  selector:
    matchLabels:
      app: chainmaker-go
      node: node{i}
  replicas: 1
  template:
    metadata:
      labels:
        app: chainmaker-go
        node: node{i}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: cm.type 
                operator: In
                values:
                - consensus
      containers:
        - name: chainmaker-go-container
          image: chainmaker:v240_sync_new
          resources:
#            limits:
#              cpu: "4"
#              memory: "8Gi"
           # requests:
             # cpu: "2"
             # memory: "4Gi"
          env:
            - name: config_path
              value: /chainmaker-go/config/wx-org.chainmaker.org/chainmaker.yml
          command: ["./chainmaker"]
          args: ["start", "-c", "$(config_path)"]
          ports:
            - name: libp2p
              containerPort: 11301
            - name: rpc
              containerPort: 12301
          volumeMounts:
            - mountPath: /chainmaker-go/data
              name: chainmaker-data
            - mountPath: /chainmaker-go/log
              name: chainmaker-logs
            - mountPath: /chainmaker-go/config/wx-org.chainmaker.org/chainmaker.yml
              name: chainmaker-config
              subPath: chainmaker.yml
            - mountPath: /chainmaker-go/config/wx-org.chainmaker.org/log.yml
              name: chainmaker-log-conf
              subPath: log.yml
              readOnly: true
            - mountPath: /chainmaker-go/config/wx-org.chainmaker.org/chainconfig/bc1.yml
              name: chainmaker-bc-conf
              subPath: bc.yml
              readOnly: true
            - mountPath: /chainmaker-go/config/wx-org.chainmaker.org/certs/ca/wx-org1.chainmaker.org/ca.crt
              name: chainmaker-org1-cert
              subPath: org-ca.crt
            - mountPath: /chainmaker-go/config/wx-org.chainmaker.org/certs/ca/wx-org2.chainmaker.org/ca.crt
              name: chainmaker-org2-cert
              subPath: org-ca.crt
            - mountPath: /chainmaker-go/config/wx-org.chainmaker.org/certs/ca/wx-org3.chainmaker.org/ca.crt
              name: chainmaker-org3-cert
              subPath: org-ca.crt
            - mountPath: /chainmaker-go/config/wx-org.chainmaker.org/certs/ca/wx-org4.chainmaker.org/ca.crt
              name: chainmaker-org4-cert
              subPath: org-ca.crt
            - mountPath: /chainmaker-go/config/wx-org.chainmaker.org/certs/ca/wx-org.chainmaker.org/ca.crt
              name: chainmaker-cert
              subPath: org-ca.crt
            - mountPath: /chainmaker-go/config/wx-org.chainmaker.org/certs/node/consensus1/consensus1.tls.key
              name: chainmaker-cert
              subPath: node-consensus1-tls.key
              readOnly: true
            - mountPath: /chainmaker-go/config/wx-org.chainmaker.org/certs/node/consensus1/consensus1.tls.crt
              name: chainmaker-cert
              subPath: node-consensus1-tls.crt
              readOnly: true
            - mountPath: /chainmaker-go/config/wx-org.chainmaker.org/certs/node/consensus1/consensus1.sign.key
              name: chainmaker-cert
              subPath: node-consensus1-sign.key
              readOnly: true
            - mountPath: /chainmaker-go/config/wx-org.chainmaker.org/certs/node/consensus1/consensus1.sign.crt
              name: chainmaker-cert
              subPath: node-consensus1-sign.crt
              readOnly: true
        - name: docker-go-container
          securityContext:
            privileged: true
          image: chainmakerofficial/chainmaker-vm-engine:v2.3.2
          resources:
            # limits:
              # cpu: "4"
              # memory: "8Gi"
            # requests:
              # cpu: "1"
              # memory: "2Gi"
          ports:
            - containerPort: 22351
              name: vmport
              protocol: TCP
          env:
            - name: CHAIN_RPC_PROTOCOL
              value: "1"
            - name: CHAIN_HOST
              value: "127.0.0.1"
            - name: CHAIN_RPC_PORT
              value: "22351"
            - name: SANDBOX_RPC_PORT
              value: "32351"
            - name: MAX_SEND_MSG_SIZE
              value: "100"
            - name: MAX_RECV_MSG_SIZE
              value: "100"
            - name: MAX_CONN_TIMEOUT
              value: "10"
            - name: MAX_ORIGINAL_PROCESS_NUM
              value: "20"
            - name: DOCKERVM_CONTRACT_ENGINE_LOG_LEVEL
              value: "DEBUG"
            - name: DOCKERVM_SANDBOX_LOG_LEVEL
              value: "DEBUG"
            - name: DOCKERVM_LOG_IN_CONSOLE
              value: "false"
      restartPolicy: Always
      volumes:
        - name: chainmaker-data
          hostPath:
            path: /data/k8s/chainmaker/{namespace}/node{i}/data/
            type: DirectoryOrCreate
        - name: chainmaker-logs
          hostPath:
            path: /data/k8s/chainmaker/{namespace}/node{i}/logs/
            type: DirectoryOrCreate
        - name: chainmaker-config
          configMap:
            name: node{i}.chainmaker
        - name: chainmaker-cert
          configMap:
            name: node{i}.cert
        - name: chainmaker-log-conf
          configMap:
            name: log-conf
        - name: chainmaker-bc-conf
          configMap:
            name: bc-conf
        - name: chainmaker-org1-cert
          configMap:
            name: node1.cert
        - name: chainmaker-org2-cert
          configMap:
            name: node2.cert
        - name: chainmaker-org3-cert
          configMap:
            name: node3.cert
        - name: chainmaker-org4-cert
          configMap:
            name: node4.cert

---
apiVersion: v1
kind: Service
metadata:
  name: node{i}-headless
spec:
  clusterIP: None
  selector:
    app: chainmaker-go
    node: node{i}
  ports:
    - protocol: TCP
      port: 12301
      targetPort: 12301
      name: grpc
    - protocol: TCP
      port: 11301
      targetPort: 11301
      name: node

---
apiVersion: v1
kind: Service
metadata:
  name: node{i}-grpc
spec:
  type: ClusterIP 
  selector:
    app: chainmaker-go
    node: node{i}
  ports:
    - protocol: TCP
      port: {localPort}
      targetPort: 12301 
      name: grpc
